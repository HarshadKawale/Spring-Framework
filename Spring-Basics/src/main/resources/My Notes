Spring Modules :

Spring Boot
Spring Security
Spring Data
Spring Batch
Spring HATEOAS
Spring Integration
Spring CLoud
Spring Session
Spring web services
Others
-----------------------------------------------------------------------------------------------------------------------------------------------------
Why spring is so popular
1.enables testable code
2.less code and no plumbing(extra code) code
3.flexibility to accept new technology

-----------------------------------------------------------------------------------------------------------------------------------------------------

//sortAlgorithm is a dependency of binarysearchImpl

Applications are divided into below parts

Web layer-deals with business logic and show it on UI
|
business layer-contains business logic
|
data layer-deals with getting data from DB

so data layer is dependency of business layer 
and business layer is a dependency of web layer

web layer will invoke service from business while business will invoke service from data layer
-----------------------------------------------------------------------------------------------------------------------------------------------------


@Primary indicates that a bean should be given preference when multiple candidates are qualified to autowire a single-valued dependency. There should be only one @Primary bean among same type of beans
if multiple beans declared primary of same type then it will throw an error as multiple beans are declared as primary

@Qualifier annotation is used to resolve the autowiring conflict, when there are multiple beans of same type

-----------------------------------------------------------------------------------------------------------------------------------------------------
Scope of bean

default scope-Singletone

Singletone-one instance per spring context
prototype-new bean whenever requested
request-one bean per HTTP request
session-one bean per HTTP session

@Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE) to change scope to prototype or @Scope(ConfigurableBeanFactory.SCOPE_Singletone)by default
-----------------------------------------------------------------------------------------------------------------------------------------------------
@ComponentScan("com.spring.componentscan") on Application class when dependency in in other Package

ComponentScan is nothing but search for bean managed by spring IOC Container in given package
-----------------------------------------------------------------------------------------------------------------------------------------------------
Lifecycle of a Bean - @PostConstruct and @PreDestroy

@PostConstruct -- As soon as bean is created @PostConstruct method will be called

@Predestroy --
-----------------------------------------------------------------------------------------------------------------------------------------------------

Container and Dependency Injection (CDI) - @Named, @Inject,@SingleTon
CDI is like Interface and @Named, @Inject,@SingleTon are its Implementation
e.g JPA(Java persistence API) is an interface and hibernate is its implementation

 @Named(Interface)--(@Autowired)(Implementation), below in same way
 @Inject--(@Component and @Qualifier),
 @SingleTon--(Defines a scope of singleton)


